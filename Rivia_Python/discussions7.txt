Site for our content: https://github.com/hessifer/Python/tree/master/Rivia_Python

Agenda

1. Creating a basic class
2. Class instance vairables/attributes
3. Class instance methods (built ins)
4. Adding additional methods
5. Basic OOP Inheritance

Coding Exercise

Coding exercise 1
    - continue to work on library class, look for ways to improve our code and add two additional
      methods related to normal interaction with a library (unregister user, checkout books).

Coding exercise 2
        - create two classes one should be the base class and the other should be the child class.
          Ensure you are using inheritance correctly. In your child class use both attributes 
          from the base class and from you child class. (hint: use super()) <- research
          
          

----------------------------------------

import random

class Library:
    library_name = "Bosh"
    library_phone = "123.456.7890"

    def __init__(self, member_id=None):
        if not member_id:
            self.member_id = self.register_member()
        else:
            self.member_id = member_id
    
    def register_member(self) -> int:
        """Used to register a new member."""
        self.fname = input("First Name: ")
        self.lname = input("Last Name: ")

        return random.randint(10000, 99999)

    def __repr__(self) -> str:
        """Provides a string representation of instance."""
        str_text = f"Library Name: {self.library_name}\n"
        str_text += f"Library Phone: {self.library_phone}"
        str_text += f"\nMember ID: {self.member_id}"

        return str_text
'''
    def __repr__(self):
        """Provides an object representation of the instance."""
        pass
'''

# library = Library()
library = Library(98989)
# print(library.member_id)
print(library)
        
    
    


